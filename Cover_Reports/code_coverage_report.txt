Coverage Report by instance with details

=================================================================================
=== Instance: /top/fifo_if
=== Design Unit: work.FIFO_interface
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         86        86         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/fifo_if --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                        almostfull           1           1      100.00 
                                               clk           1           1      100.00 
                                     data_in[15-0]           1           1      100.00 
                                    data_out[15-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                              full           1           1      100.00 
                                          overflow           1           1      100.00 
                                             rd_en           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                             wr_en           1           1      100.00 

Total Node Count     =         43 
Toggled Node Count   =         43 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (86 of 86 bins)

=================================================================================
=== Instance: /top/DUT/SVA
=== Design Unit: work.assertions
=================================================================================

Assertion Coverage:
    Assertions                      31        31         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/SVA/overflow_assert_1
                     assertions.sv(12)                  0          1
/top/DUT/SVA/underflow_assert_1
                     assertions.sv(13)                  0          1
/top/DUT/SVA/wr_ack_assert_1
                     assertions.sv(14)                  0          1
/top/DUT/SVA/overflow_assert_2
                     assertions.sv(19)                  0          1
/top/DUT/SVA/underflow_assert_2
                     assertions.sv(20)                  0          1
/top/DUT/SVA/wr_ack_assert_2
                     assertions.sv(21)                  0          1
/top/DUT/SVA/full_assert_1
                     assertions.sv(28)                  0          1
/top/DUT/SVA/empty_assert_1
                     assertions.sv(29)                  0          1
/top/DUT/SVA/almostfull_assert_1
                     assertions.sv(30)                  0          1
/top/DUT/SVA/almostempty_assert_1
                     assertions.sv(31)                  0          1
/top/DUT/SVA/full_assert_2
                     assertions.sv(37)                  0          1
/top/DUT/SVA/empty_assert_2
                     assertions.sv(38)                  0          1
/top/DUT/SVA/almostfull_assert_2
                     assertions.sv(39)                  0          1
/top/DUT/SVA/almostempty_assert_2
                     assertions.sv(40)                  0          1
/top/DUT/SVA/rd_count_assert
                     assertions.sv(49)                  0          1
/top/DUT/SVA/wr_count_assert
                     assertions.sv(50)                  0          1
/top/DUT/SVA/rd_wr_count_assert
                     assertions.sv(51)                  0          1
/top/DUT/SVA/rd_ptr_assert
                     assertions.sv(59)                  0          1
/top/DUT/SVA/wr_ptr_assert
                     assertions.sv(60)                  0          1
/top/DUT/SVA/almostfull_full_assert
                     assertions.sv(69)                  0          1
/top/DUT/SVA/almostempty_empty_assert
                     assertions.sv(72)                  0          1
/top/DUT/SVA/rst_count_assert
                     assertions.sv(80)                  0          1
/top/DUT/SVA/rst_rd_ptr_assert
                     assertions.sv(81)                  0          1
/top/DUT/SVA/rst_wr_ptr_assert
                     assertions.sv(82)                  0          1
/top/DUT/SVA/rst_full_assert
                     assertions.sv(83)                  0          1
/top/DUT/SVA/rst_empty_assert
                     assertions.sv(84)                  0          1
/top/DUT/SVA/rst_almostfull_assert
                     assertions.sv(85)                  0          1
/top/DUT/SVA/rst_almostempty_assert
                     assertions.sv(86)                  0          1
/top/DUT/SVA/rst_overflow_assert
                     assertions.sv(88)                  0          1
/top/DUT/SVA/rst_underflow_assert
                     assertions.sv(89)                  0          1
/top/DUT/SVA/rst_wr_ack_assert
                     assertions.sv(90)                  0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         2         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT/SVA

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File assertions.sv
------------------------------------IF Branch------------------------------------
    79                                      4334     Count coming in to IF
    79              1                        190             if(!rst_n)begin
                                            4144     All False Count
Branch totals: 2 hits of 2 branches = 100.00%



Directive Coverage:
    Directives                      31        31         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/SVA/overflow_cover_1            assertions Verilog  SVA  assertions.sv(15)
                                                                              1382 Covered   
/top/DUT/SVA/underflow_cover_1           assertions Verilog  SVA  assertions.sv(16)
                                                                                51 Covered   
/top/DUT/SVA/wr_ack_cover_1              assertions Verilog  SVA  assertions.sv(17)
                                                                              2014 Covered   
/top/DUT/SVA/overflow_cover_2            assertions Verilog  SVA  assertions.sv(22)
                                                                              2014 Covered   
/top/DUT/SVA/underflow_cover_2           assertions Verilog  SVA  assertions.sv(23)
                                                                              1412 Covered   
/top/DUT/SVA/wr_ack_cover_2              assertions Verilog  SVA  assertions.sv(24)
                                                                              1382 Covered   
/top/DUT/SVA/full_cover_1                assertions Verilog  SVA  assertions.sv(32)
                                                                              1998 Covered   
/top/DUT/SVA/empty_cover_1               assertions Verilog  SVA  assertions.sv(33)
                                                                               259 Covered   
/top/DUT/SVA/almostfull_cover_1          assertions Verilog  SVA  assertions.sv(34)
                                                                              1373 Covered   
/top/DUT/SVA/almostempty_cover_1         assertions Verilog  SVA  assertions.sv(35)
                                                                               244 Covered   
/top/DUT/SVA/full_cover_2                assertions Verilog  SVA  assertions.sv(41)
                                                                              3023 Covered   
/top/DUT/SVA/empty_cover_2               assertions Verilog  SVA  assertions.sv(42)
                                                                              4762 Covered   
/top/DUT/SVA/almostfull_cover_2          assertions Verilog  SVA  assertions.sv(43)
                                                                              3648 Covered   
/top/DUT/SVA/almostempty_cover_2         assertions Verilog  SVA  assertions.sv(44)
                                                                              4777 Covered   
/top/DUT/SVA/rd_count_cover              assertions Verilog  SVA  assertions.sv(52)
                                                                               412 Covered   
/top/DUT/SVA/wr_count_cover              assertions Verilog  SVA  assertions.sv(53)
                                                                              1411 Covered   
/top/DUT/SVA/rd_wr_count_cover           assertions Verilog  SVA  assertions.sv(54)
                                                                               567 Covered   
/top/DUT/SVA/rd_ptr_cover                assertions Verilog  SVA  assertions.sv(61)
                                                                              1412 Covered   
/top/DUT/SVA/wr_ptr_cover                assertions Verilog  SVA  assertions.sv(62)
                                                                              2014 Covered   
/top/DUT/SVA/almostfull_full_cover       assertions Verilog  SVA  assertions.sv(74)
                                                                               657 Covered   
/top/DUT/SVA/almostempty_empty_cover     assertions Verilog  SVA  assertions.sv(75)
                                                                                16 Covered   
/top/DUT/SVA/rst_count_cover             assertions Verilog  SVA  assertions.sv(91)
                                                                                95 Covered   
/top/DUT/SVA/rst_rd_ptr_cover            assertions Verilog  SVA  assertions.sv(92)
                                                                                95 Covered   
/top/DUT/SVA/rst_wr_ptr_cover            assertions Verilog  SVA  assertions.sv(93)
                                                                                95 Covered   
/top/DUT/SVA/rst_full_cover              assertions Verilog  SVA  assertions.sv(94)
                                                                                95 Covered   
/top/DUT/SVA/rst_empty_cover             assertions Verilog  SVA  assertions.sv(95)
                                                                                95 Covered   
/top/DUT/SVA/rst_almostfull_cover        assertions Verilog  SVA  assertions.sv(96)
                                                                                95 Covered   
/top/DUT/SVA/rst_almostempty_cover       assertions Verilog  SVA  assertions.sv(97)
                                                                                95 Covered   
/top/DUT/SVA/rst_overflow_cover          assertions Verilog  SVA  assertions.sv(99)
                                                                                95 Covered   
/top/DUT/SVA/rst_underflow_cover         assertions Verilog  SVA  assertions.sv(100)
                                                                                95 Covered   
/top/DUT/SVA/rst_wr_ack_cover            assertions Verilog  SVA  assertions.sv(101)
                                                                                95 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       1         1         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT/SVA --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File assertions.sv
    2                                                module assertions(clk, rst_n, wr_en, rd_en, data_in, data_out, wr_ack, overflow, full, empty, almostfull, almostempty, underflow, wr_ptr, rd_ptr, count);
    3                                                
    4                                                    input [FIFO_WIDTH-1:0] data_in;
    5                                                    input clk, rst_n, wr_en, rd_en;
    6                                                    input [FIFO_WIDTH-1:0] data_out;
    7                                                    input wr_ack, overflow, full, empty, almostfull, almostempty, underflow;
    8                                                    input [max_fifo_addr -1 :0] wr_ptr , rd_ptr;
    9                                                    input [max_fifo_addr    :0] count;
    10                                               
    11                                               //assertions and cover of sequential outputs
    12                                                   overflow_assert_1    :assert property (@(posedge clk) disable iff(!rst_n) ((count == FIFO_DEPTH) && wr_en)   |=>(overflow)  );
    13                                                   underflow_assert_1   :assert property (@(posedge clk) disable iff(!rst_n) ((count == 0)          && rd_en)   |=>(underflow) );
    14                                                   wr_ack_assert_1      :assert property (@(posedge clk) disable iff(!rst_n) ((count != FIFO_DEPTH) && wr_en)   |=>(wr_ack)    ); 
    15                                                   overflow_cover_1     :cover property  (@(posedge clk) disable iff(!rst_n) ((count == FIFO_DEPTH) && wr_en)   |=>(overflow)  );
    16                                                   underflow_cover_1    :cover property  (@(posedge clk) disable iff(!rst_n) ((count == 0)          && rd_en)   |=>(underflow) );
    17                                                   wr_ack_cover_1       :cover property  (@(posedge clk) disable iff(!rst_n) ((count != FIFO_DEPTH) && wr_en)   |=>(wr_ack)    );
    18                                               
    19                                                   overflow_assert_2    :assert property (@(posedge clk) disable iff(!rst_n) ((count != FIFO_DEPTH) && wr_en)   |=>(overflow   == 0) );
    20                                                   underflow_assert_2   :assert property (@(posedge clk) disable iff(!rst_n) ((count != 0)          && rd_en)   |=>(underflow) == 0  );
    21                                                   wr_ack_assert_2      :assert property (@(posedge clk) disable iff(!rst_n) ((count == FIFO_DEPTH) && wr_en)   |=>(wr_ack)    == 0  );
    22                                                   overflow_cover_2     :cover property  (@(posedge clk) disable iff(!rst_n) ((count != FIFO_DEPTH) && wr_en)   |=>(overflow)  == 0  );
    23                                                   underflow_cover_2    :cover property  (@(posedge clk) disable iff(!rst_n) ((count != 0)          && rd_en)   |=>(underflow  == 0) );
    24                                                   wr_ack_cover_2       :cover property  (@(posedge clk) disable iff(!rst_n) ((count == FIFO_DEPTH) && wr_en)   |=>(wr_ack)    == 0  );
    25                                               
    26                                               //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    27                                                   //assertions and cover of combinational outputs
    28                                                   full_assert_1        :assert property (@(posedge clk)  (count==FIFO_DEPTH)   |-> full);
    29                                                   empty_assert_1       :assert property (@(posedge clk)  (count==0)            |-> empty);
    30                                                   almostfull_assert_1  :assert property (@(posedge clk)  (count==FIFO_DEPTH-1) |-> almostfull);
    31                                                   almostempty_assert_1 :assert property (@(posedge clk)  (count==1)            |-> almostempty);
    32                                                   full_cover_1         :cover  property (@(posedge clk)  (count==FIFO_DEPTH)   |-> full);
    33                                                   empty_cover_1        :cover  property (@(posedge clk)  (count==0)            |-> empty);
    34                                                   almostfull_cover_1   :cover  property (@(posedge clk)  (count==FIFO_DEPTH-1) |-> almostfull);
    35                                                   almostempty_cover_1  :cover  property (@(posedge clk)  (count==1)            |-> almostempty);
    36                                               
    37                                                   full_assert_2        :assert property (@(posedge clk)  (count!=FIFO_DEPTH)   |-> full        == 0);
    38                                                   empty_assert_2       :assert property (@(posedge clk)  (count!=0)            |-> empty       == 0);
    39                                                   almostfull_assert_2  :assert property (@(posedge clk)  (count!=FIFO_DEPTH-1) |-> almostfull  == 0);
    40                                                   almostempty_assert_2 :assert property (@(posedge clk)  (count!=1)            |-> almostempty == 0);
    41                                                   full_cover_2         :cover  property (@(posedge clk)  (count!=FIFO_DEPTH)   |-> full        == 0);
    42                                                   empty_cover_2        :cover  property (@(posedge clk)  (count!=0)            |-> empty       == 0);
    43                                                   almostfull_cover_2   :cover  property (@(posedge clk)  (count!=FIFO_DEPTH-1) |-> almostfull  == 0);
    44                                                   almostempty_cover_2  :cover  property (@(posedge clk)  (count!=1)            |-> almostempty == 0);
    45                                               
    46                                               //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    47                                               
    48                                                   //assertions on counter
    49                                                   rd_count_assert    :assert property (@(posedge clk) disable iff(!rst_n) (rd_en  && !wr_en && count !=0)                      |=>($past(count)-1'b1 == count));
    50                                                   wr_count_assert    :assert property (@(posedge clk) disable iff(!rst_n) (!rd_en && wr_en  && count !=FIFO_DEPTH)             |=>($past(count)+1'b1 == count));
    51                                                   rd_wr_count_assert :assert property (@(posedge clk) disable iff(!rst_n) (rd_en  && wr_en  && count !=0 && count!=FIFO_DEPTH) |=>($past(count)      == count));      
    52                                                   rd_count_cover     :cover property  (@(posedge clk) disable iff(!rst_n) (rd_en  &&!wr_en  && count !=0)                      |=>($past(count)-1'b1 == count));
    53                                                   wr_count_cover     :cover property  (@(posedge clk) disable iff(!rst_n) (!rd_en &&wr_en   && count !=FIFO_DEPTH)             |=>($past(count)+1'b1 == count));
    54                                                   rd_wr_count_cover  :cover property  (@(posedge clk) disable iff(!rst_n) (rd_en  &&wr_en   &&count  !=0 && count!=FIFO_DEPTH) |=>($past(count)      == count));
    55                                               
    56                                               //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    57                                               
    58                                                   //assertions on pointers
    59                                                   rd_ptr_assert      :assert property (@(posedge clk) disable iff(!rst_n) (rd_en  && count!=0)           |=>($past(rd_ptr)+1'b1==rd_ptr));
    60                                                   wr_ptr_assert      :assert property (@(posedge clk) disable iff(!rst_n) (wr_en  && count!=FIFO_DEPTH)  |=>($past(wr_ptr)+1'b1==wr_ptr));    
    61                                                   rd_ptr_cover       :cover property  (@(posedge clk) disable iff(!rst_n) (rd_en  && count!=0)           |=>($past(rd_ptr)+1'b1==rd_ptr));
    62                                                   wr_ptr_cover       :cover property  (@(posedge clk) disable iff(!rst_n) (wr_en  && count!=FIFO_DEPTH)  |=>($past(wr_ptr)+1'b1==wr_ptr));
    63                                               
    64                                               
    65                                               //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    66                                               
    67                                                   //more assertions
    68                                                   // if almostfull is HIGH and wr_en only is HIGH then the next cycle full will be HIGH
    69                                                   almostfull_full_assert   :assert property (@(posedge clk) disable iff(!rst_n) (almostfull  && wr_en && !rd_en) |=> full);
    70                                               
    71                                                   // if almostempty is HIGH and rd_en only is HIGH then the next cycle empty will be HIGH
    72                                                   almostempty_empty_assert :assert property (@(posedge clk) disable iff(!rst_n) (almostempty && rd_en && !wr_en) |=> empty);
    73                                               
    74                                                   almostfull_full_cover   :cover property (@(posedge clk) disable iff(!rst_n) (almostfull  && wr_en && !rd_en)   |=> full);
    75                                                   almostempty_empty_cover :cover property (@(posedge clk) disable iff(!rst_n) (almostempty && rd_en && !wr_en)   |=> empty);
    76                                               
    77                                               
    78              1                       4334         always_comb begin  

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        106       106         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT/SVA --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                        almostfull           1           1      100.00 
                                               clk           1           1      100.00 
                                        count[0-3]           1           1      100.00 
                                     data_in[0-15]           1           1      100.00 
                                    data_out[0-15]           1           1      100.00 
                                             empty           1           1      100.00 
                                              full           1           1      100.00 
                                          overflow           1           1      100.00 
                                             rd_en           1           1      100.00 
                                       rd_ptr[0-2]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                             wr_en           1           1      100.00 
                                       wr_ptr[0-2]           1           1      100.00 

Total Node Count     =         53 
Toggled Node Count   =         53 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (106 of 106 bins)

=================================================================================
=== Instance: /top/DUT
=== Design Unit: work.FIFO
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        27        27         0   100.00%

================================Branch Details================================

Branch Coverage for instance /top/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
------------------------------------IF Branch------------------------------------
    15                                      5116     Count coming in to IF
    15              1                        191     		if (!rst_n) begin
    20              1                       2054     		else if (wr_en && count < FIFO_DEPTH) begin
    26              1                       2871     		else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    28                                      2871     Count coming in to IF
    28              1                       1415     			if (wr_en && full)
    30              1                       1456     			else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    36                                      3757     Count coming in to IF
    36              1                        190     		if (!rst_n) begin
    41              1                       1440     		else if (rd_en && count != 0) begin
    46              1                       2127     		else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                      2127     Count coming in to IF
    48              1                         50     			if (rd_en && empty) 
    50              1                       2077     			else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                      4320     Count coming in to IF
    57              1                        191     		if (!rst_n) begin
    60              1                       4129     		else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    61                                      4129     Count coming in to IF
    61              1                       1436     			if	    ( ({wr_en, rd_en} == 2'b10) && !full) 
    64              1                        420     			else if ( ({wr_en, rd_en} == 2'b01) && !empty)
    67              1                        932     			else if   ({wr_en, rd_en} == 2'b11) begin
                                            1341     All False Count
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    69                                       932     Count coming in to IF
    69              1                        438     				if (full) 
    71              1                         36     				else if (empty) 
                                             458     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    80                                      2425     Count coming in to IF
    80              1                        671     	assign full        = (count == FIFO_DEPTH)   ? 1 : 0;
    80              2                       1754     	assign full        = (count == FIFO_DEPTH)   ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    81                                      2425     Count coming in to IF
    81              1                        111     	assign empty       = (count == 0)            ? 1 : 0;
    81              2                       2314     	assign empty       = (count == 0)            ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    82                                      2425     Count coming in to IF
    82              1                        808     	assign almostfull  = (count == FIFO_DEPTH-1) ? 1 : 0; 
    82              2                       1617     	assign almostfull  = (count == FIFO_DEPTH-1) ? 1 : 0; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    83                                      2425     Count coming in to IF
    83              1                        136     	assign almostempty = (count == 1)            ? 1 : 0;
    83              2                       2289     	assign almostempty = (count == 1)            ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      20        18         2    90.00%

================================Condition Details================================

Condition Coverage for instance /top/DUT --

  File FIFO.sv
----------------Focused Condition View-------------------
Line       20 Item    1  (wr_en && (count < 8))
Condition totals: 2 of 2 input terms covered = 100.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
        wr_en         Y
  (count < 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  wr_en_0               -                             
  Row   2:          1  wr_en_1               (count < 8)                   
  Row   3:          1  (count < 8)_0         wr_en                         
  Row   4:          1  (count < 8)_1         wr_en                         

----------------Focused Condition View-------------------
Line       28 Item    1  (wr_en && full)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       wr_en         Y
        full         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  wr_en_0               -                             
  Row   2:          1  wr_en_1               full                          
  Row   3:    ***0***  full_0                wr_en                         
  Row   4:          1  full_1                wr_en                         

----------------Focused Condition View-------------------
Line       41 Item    1  (rd_en && (count != 0))
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
         rd_en         Y
  (count != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               -                             
  Row   2:          1  rd_en_1               (count != 0)                  
  Row   3:          1  (count != 0)_0        rd_en                         
  Row   4:          1  (count != 0)_1        rd_en                         

----------------Focused Condition View-------------------
Line       48 Item    1  (rd_en && empty)
Condition totals: 1 of 2 input terms covered = 50.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       empty         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               -                             
  Row   2:          1  rd_en_1               empty                         
  Row   3:    ***0***  empty_0               rd_en                         
  Row   4:          1  empty_1               rd_en                         

----------------Focused Condition View-------------------
Line       61 Item    1  ((~rd_en && wr_en) && ~full)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       wr_en         Y
        full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               (~full && wr_en)              
  Row   2:          1  rd_en_1               -                             
  Row   3:          1  wr_en_0               ~rd_en                        
  Row   4:          1  wr_en_1               (~full && ~rd_en)             
  Row   5:          1  full_0                (~rd_en && wr_en)             
  Row   6:          1  full_1                (~rd_en && wr_en)             

----------------Focused Condition View-------------------
Line       64 Item    1  ((rd_en && ~wr_en) && ~empty)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       wr_en         Y
       empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               -                             
  Row   2:          1  rd_en_1               (~empty && ~wr_en)            
  Row   3:          1  wr_en_0               (~empty && rd_en)             
  Row   4:          1  wr_en_1               rd_en                         
  Row   5:          1  empty_0               (rd_en && ~wr_en)             
  Row   6:          1  empty_1               (rd_en && ~wr_en)             

----------------Focused Condition View-------------------
Line       67 Item    1  (rd_en & wr_en)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rd_en         Y
       wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_en_0               wr_en                         
  Row   2:          1  rd_en_1               wr_en                         
  Row   3:          1  wr_en_0               rd_en                         
  Row   4:          1  wr_en_1               rd_en                         

----------------Focused Condition View-------------------
Line       80 Item    1  (count == 8)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 8)_0        -                             
  Row   2:          1  (count == 8)_1        -                             

----------------Focused Condition View-------------------
Line       81 Item    1  (count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 0)_0        -                             
  Row   2:          1  (count == 0)_1        -                             

----------------Focused Condition View-------------------
Line       82 Item    1  (count == (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (count == (8 - 1))         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == (8 - 1))_0  -                             
  Row   2:          1  (count == (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       83 Item    1  (count == 1)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 1)_0        -                             
  Row   2:          1  (count == 1)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      29        29         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
    2                                                module FIFO(clk, rst_n, wr_en, rd_en, data_in, data_out, wr_ack, overflow, full, empty, almostfull, almostempty, underflow);
    3                                                
    4                                                	input [FIFO_WIDTH-1:0] data_in;
    5                                                	input clk, rst_n, wr_en, rd_en;
    6                                                	output reg [FIFO_WIDTH-1:0] data_out;
    7                                                	output full, empty, almostfull, almostempty ;
    8                                                	output reg overflow , underflow , wr_ack;
    9                                                
    10                                               	reg [FIFO_WIDTH    -1 :0] mem [FIFO_DEPTH - 1:0];
    11                                               	reg [max_fifo_addr -1 :0] wr_ptr , rd_ptr;
    12                                               	reg [max_fifo_addr    :0] count;
    13                                               
    14              1                       5116     	always @(posedge clk or negedge rst_n) begin //////write operation////////
    15                                               		if (!rst_n) begin
    16              1                        191     			wr_ptr   <= 0;
    17              1                        191     			wr_ack   <= 0;
    18              1                        191     			overflow <= 0;
    19                                               		end
    20                                               		else if (wr_en && count < FIFO_DEPTH) begin
    21              1                       2054     			mem[wr_ptr] <= data_in;
    22              1                       2054     			wr_ack      <= 1;
    23              1                       2054     			wr_ptr      <= wr_ptr + 1;
    24              1                       2054     			overflow    <= 0;
    25                                               		end
    26                                               		else begin 
    27              1                       2871     			wr_ack <= 0;
    28                                               			if (wr_en && full)
    29              1                       1415     				overflow <= 1;
    30                                               			else
    31              1                       1456     				overflow <= 0; 
    32                                               			end
    33                                               	end
    34                                               
    35              1                       3757     	always @(posedge clk or negedge rst_n) begin ///////read operation///////
    36                                               		if (!rst_n) begin
    37              1                        190     			rd_ptr    <= 0;
    38              1                        190     			underflow <= 0;
    39                                               			//data_out  <= 0;
    40                                               		end
    41                                               		else if (rd_en && count != 0) begin
    42              1                       1440     			data_out  <= mem[rd_ptr];
    43              1                       1440     			rd_ptr    <= rd_ptr + 1;
    44              1                       1440     			underflow <= 0;
    45                                               		end
    46                                               		else begin
    47                                               
    48                                               			if (rd_en && empty) 
    49              1                         50     				underflow <= 1;
    50                                               			else
    51              1                       2077     				underflow <= 0;
    52                                               
    53                                               		end
    54                                               	end
    55                                               
    56              1                       4320     	always @(posedge clk or negedge rst_n) begin
    57                                               		if (!rst_n) begin
    58              1                        191     			count <= 0;
    59                                               		end
    60                                               		else begin
    61                                               			if	    ( ({wr_en, rd_en} == 2'b10) && !full) 
    62              1                       1436     				    count <= count + 1;
    63                                               
    64                                               			else if ( ({wr_en, rd_en} == 2'b01) && !empty)
    65              1                        420     				    count <= count - 1;
    66                                               
    67                                               			else if   ({wr_en, rd_en} == 2'b11) begin
    68                                               
    69                                               				if (full) 
    70              1                        438     					count <= count - 1; 
    71                                               				else if (empty) 
    72              1                         36     					count <= count + 1;
    73                                               				//else 
    74                                               					//count <= count;
    75                                               	
    76                                               			end
    77                                               		end
    78                                               	end
    79                                               
    80              1                       2426     	assign full        = (count == FIFO_DEPTH)   ? 1 : 0;
    81              1                       2426     	assign empty       = (count == 0)            ? 1 : 0;
    82              1                       2426     	assign almostfull  = (count == FIFO_DEPTH-1) ? 1 : 0; 
    83              1                       2426     	assign almostempty = (count == 1)            ? 1 : 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        106       106         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                        almostfull           1           1      100.00 
                                               clk           1           1      100.00 
                                        count[3-0]           1           1      100.00 
                                     data_in[0-15]           1           1      100.00 
                                    data_out[15-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                              full           1           1      100.00 
                                          overflow           1           1      100.00 
                                             rd_en           1           1      100.00 
                                       rd_ptr[2-0]           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                             wr_en           1           1      100.00 
                                       wr_ptr[2-0]           1           1      100.00 

Total Node Count     =         53 
Toggled Node Count   =         53 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (106 of 106 bins)

=================================================================================
=== Instance: /top
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       6         6         0   100.00%

================================Statement Details================================

Statement Coverage for instance /top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File top.sv
    5                                                module top();
    6                                                	bit clk;
    7                                                	initial begin
    8               1                          1     		clk = 0;
    9               1                          1     		forever
    10              1                      10043     			#1 clk =~clk;
    10              2                      10042     
    11                                               	end
    12                                               
    13                                               	FIFO_interface fifo_if(clk);
    14                                               
    15                                               	FIFO DUT(
    16                                                		fifo_if.clk,
    17                                                		fifo_if.rst_n,
    18                                                		fifo_if.wr_en,
    19                                                		fifo_if.rd_en,
    20                                                		fifo_if.data_in,
    21                                                		fifo_if.data_out,
    22                                                		fifo_if.wr_ack,
    23                                                		fifo_if.overflow,
    24                                                		fifo_if.full,
    25                                                		fifo_if.empty,
    26                                                		fifo_if.almostfull,
    27                                                		fifo_if.almostempty,
    28                                                		fifo_if.underflow);
    29                                               
    30                                               	bind FIFO assertions SVA(
    31                                                   	fifo_if.clk,
    32                                                		fifo_if.rst_n,
    33                                                		fifo_if.wr_en,
    34                                                		fifo_if.rd_en,
    35                                                		fifo_if.data_in,
    36                                                		fifo_if.data_out,
    37                                                		fifo_if.wr_ack,
    38                                                		fifo_if.overflow,
    39                                                		fifo_if.full,
    40                                                		fifo_if.empty,
    41                                                		fifo_if.almostfull,
    42                                                		fifo_if.almostempty,
    43                                                		fifo_if.underflow,
    44                                                		DUT.wr_ptr,
    45                                                		DUT.rd_ptr,
    46                                                		DUT.count);
    47                                               
    48                                               	initial begin
    49              1                          1     		uvm_config_db#(virtual FIFO_interface)::set(null, "uvm_test_top", "FIFO_IF", fifo_if);
    50              1                          1     		run_test("fifo_test");

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          2         2         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 

Total Node Count     =          1 
Toggled Node Count   =          1 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (2 of 2 bins)

=================================================================================
=== Instance: /fifo_sequence_item_pkg
=== Design Unit: work.fifo_sequence_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /fifo_sequence_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence_item.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     	  `uvm_object_utils(fifo_sequence_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               2                    ***0***     	  `uvm_object_utils(fifo_sequence_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     	  `uvm_object_utils(fifo_sequence_item);
    6               4                    ***0***     	  `uvm_object_utils(fifo_sequence_item);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               5                    ***0***     	  `uvm_object_utils(fifo_sequence_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     	  `uvm_object_utils(fifo_sequence_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_sequence_item_pkg --

  File sequence_item.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         4        11    26.66%

================================Statement Details================================

Statement Coverage for instance /fifo_sequence_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequence_item.sv
    1                                                package fifo_sequence_item_pkg;
    2                                                import shared_pkg::*;	
    3                                                import uvm_pkg::*;	
    4                                                `include "uvm_macros.svh"
    5                                                	class fifo_sequence_item extends uvm_sequence_item;
    6               1                    ***0***     	  `uvm_object_utils(fifo_sequence_item);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                       5021     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                    ***0***     
    6              10                    ***0***     
    7                                                
    8                                                	  parameter FIFO_WIDTH = 16;
    9                                                    parameter FIFO_DEPTH = 8;
    10                                                   logic clk;
    11                                                   rand logic [FIFO_WIDTH-1:0] data_in;
    12                                                   rand logic rst_n;
    13                                                   rand logic wr_en;
    14                                                   rand logic rd_en;
    15                                                   logic [FIFO_WIDTH-1:0] data_out , data_out_ref;
    16                                                   logic wr_ack, overflow, full, empty, almostfull, almostempty, underflow;
    17                                               
    18                                               
    19                                                   //Inside of this class add the FIFO inputs and outputs as class variables of the class as well as adding 2 integers (RD_EN_ON_DIST & WR_EN_ON_DIST) 
    20              1                      15065         int WR_EN_ON_DIST= 70;
    21              1                      15065         int RD_EN_ON_DIST= 30;
    22                                               
    23                                                   function new( string name = "alsu_sequence_item");
    24              1                      15065           super.new(name);
    25                                                   endfunction
    26                                               
    27                                                   //////////////////////convert2string_functions///////////
    28                                               
    29                                                   function string convert2string();
    30              1                    ***0***           return $sformatf("%s rst_n = 0b%0b , data_in = 0b%0b, wr_en = 0b%0b, rd_en = 0b%0b, data_out = 0b%0b, data_out_ref = 0b%0b,
    31                                                      wr_ack = 0b%0b, overflow = 0b%0b, full = 0b%0b, empty = 0b%0b, almostfull = %0b ,almostempty = 0b%0b ,underflow = 0b%0b",
    32                                                       super.convert2string() ,rst_n ,data_in , wr_en, rd_en, data_out, data_out_ref, wr_ack, overflow, full, empty , almostfull, almostempty ,underflow);
    33                                                   endfunction
    34                                               
    35                                                   function string convert2string_stimulus();
    36              1                    ***0***           return $sformatf("rst_n = 0b%0b , data_in = 0b%0b, wr_en = 0b%0b, rd_en = 0b%0b",rst_n, data_in, wr_en, rd_en);


=================================================================================
=== Instance: /fifo_read_write_sequence_pkg
=== Design Unit: work.fifo_read_write_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/fifo_read_write_sequence_pkg/fifo_read_write_sequence/body/#ublk#25337815#16/immed__19
                     read_write_sequence.sv(19)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /fifo_read_write_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File read_write_sequence.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***     		`uvm_object_utils(fifo_read_write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***     		`uvm_object_utils(fifo_read_write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***     		`uvm_object_utils(fifo_read_write_sequence)
    7               4                    ***0***     		`uvm_object_utils(fifo_read_write_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***     		`uvm_object_utils(fifo_read_write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***     		`uvm_object_utils(fifo_read_write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_read_write_sequence_pkg --

  File read_write_sequence.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         6         9    40.00%

================================Statement Details================================

Statement Coverage for instance /fifo_read_write_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File read_write_sequence.sv
    1                                                package fifo_read_write_sequence_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import fifo_sequence_item_pkg::*;
    5                                                
    6                                                	class fifo_read_write_sequence extends uvm_sequence #(fifo_sequence_item);
    7               1                    ***0***     		`uvm_object_utils(fifo_read_write_sequence)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                          1     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                
    9                                                		fifo_sequence_item seq_item;
    10                                               
    11                                               		function new(string name = "fifo_read_write_sequence");
    12              1                          1     			super.new(name);
    13                                               		endfunction
    14                                               
    15                                               		task body;
    16              1                       5000     			repeat(5000) begin
    17              1                       5000     				seq_item=fifo_sequence_item::type_id::create("seq_item");
    18              1                       5000     				start_item(seq_item);
    19                                               				assert(seq_item.randomize());
    20              1                       5000     				finish_item(seq_item);


=================================================================================
=== Instance: /fifo_write_sequence_pkg
=== Design Unit: work.fifo_write_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/fifo_write_sequence_pkg/fifo_write_sequence/body/#ublk#75765463#16/immed__19
                     write_sequence.sv(19)              0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /fifo_write_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File write_sequence.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***     		`uvm_object_utils(fifo_write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***     		`uvm_object_utils(fifo_write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***     		`uvm_object_utils(fifo_write_sequence)
    7               4                    ***0***     		`uvm_object_utils(fifo_write_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***     		`uvm_object_utils(fifo_write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***     		`uvm_object_utils(fifo_write_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_write_sequence_pkg --

  File write_sequence.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         6         9    40.00%

================================Statement Details================================

Statement Coverage for instance /fifo_write_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File write_sequence.sv
    1                                                package fifo_write_sequence_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import fifo_sequence_item_pkg::*;
    5                                                
    6                                                	class fifo_write_sequence extends uvm_sequence #(fifo_sequence_item);
    7               1                    ***0***     		`uvm_object_utils(fifo_write_sequence)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                          1     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                
    9                                                		fifo_sequence_item seq_item;
    10                                               
    11                                               		function new(string name = "fifo_write_sequence");
    12              1                          1     			super.new(name);
    13                                               		endfunction
    14                                               
    15                                               		task body;
    16              1                         10     			repeat(10) begin
    17              1                         10     				seq_item=fifo_sequence_item::type_id::create("seq_item");
    18              1                         10     				start_item(seq_item);
    19                                               				assert(seq_item.randomize() with {rst_n==1; wr_en==1; rd_en==0;});
    20              1                         10     				finish_item(seq_item);


=================================================================================
=== Instance: /fifo_read_sequence_pkg
=== Design Unit: work.fifo_read_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/fifo_read_sequence_pkg/fifo_read_sequence/body/#ublk#124360423#16/immed__19
                     read_sequence.sv(19)               0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /fifo_read_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File read_sequence.sv
------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               1                    ***0***     		`uvm_object_utils(fifo_read_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               2                    ***0***     		`uvm_object_utils(fifo_read_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               3                    ***0***     		`uvm_object_utils(fifo_read_sequence)
    7               4                    ***0***     		`uvm_object_utils(fifo_read_sequence)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               5                    ***0***     		`uvm_object_utils(fifo_read_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    7                                    ***0***     Count coming in to IF
    7               6                    ***0***     		`uvm_object_utils(fifo_read_sequence)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_read_sequence_pkg --

  File read_sequence.sv
----------------Focused Condition View-------------------
Line       7 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       7 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         6         9    40.00%

================================Statement Details================================

Statement Coverage for instance /fifo_read_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File read_sequence.sv
    1                                                package fifo_read_sequence_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import fifo_sequence_item_pkg::*;
    5                                                
    6                                                	class fifo_read_sequence extends uvm_sequence #(fifo_sequence_item);
    7               1                    ***0***     		`uvm_object_utils(fifo_read_sequence)
    7               2                    ***0***     
    7               3                    ***0***     
    7               4                    ***0***     
    7               5                    ***0***     
    7               6                          1     
    7               7                    ***0***     
    7               8                    ***0***     
    7               9                    ***0***     
    7              10                    ***0***     
    8                                                
    9                                                		fifo_sequence_item seq_item;
    10                                               
    11                                               		function new(string name = "fifo_read_sequence");
    12              1                          1     			super.new(name);
    13                                               		endfunction
    14                                               
    15                                               		task body;
    16              1                         10     			repeat(10) begin
    17              1                         10     				seq_item=fifo_sequence_item::type_id::create("seq_item");
    18              1                         10     				start_item(seq_item);
    19                                               				assert(seq_item.randomize() with {rst_n==1; wr_en==0; rd_en==1;});
    20              1                         10     				finish_item(seq_item);


=================================================================================
=== Instance: /fifo_reset_sequence_pkg
=== Design Unit: work.fifo_reset_sequence_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /fifo_reset_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File reset_sequence.sv
------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               1                    ***0***     		`uvm_object_utils(fifo_reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               2                    ***0***     		`uvm_object_utils(fifo_reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               3                    ***0***     		`uvm_object_utils(fifo_reset_sequence);
    8               4                    ***0***     		`uvm_object_utils(fifo_reset_sequence);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               5                    ***0***     		`uvm_object_utils(fifo_reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    8                                    ***0***     Count coming in to IF
    8               6                    ***0***     		`uvm_object_utils(fifo_reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_reset_sequence_pkg --

  File reset_sequence.sv
----------------Focused Condition View-------------------
Line       8 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       8 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18         9         9    50.00%

================================Statement Details================================

Statement Coverage for instance /fifo_reset_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File reset_sequence.sv
    1                                                package fifo_reset_sequence_pkg;
    2                                                import fifo_sequence_item_pkg::*;
    3                                                import shared_pkg::*;	
    4                                                import uvm_pkg::*;	
    5                                                `include "uvm_macros.svh"
    6                                                
    7                                                	class fifo_reset_sequence extends uvm_sequence #(fifo_sequence_item);
    8               1                    ***0***     		`uvm_object_utils(fifo_reset_sequence);
    8               2                    ***0***     
    8               3                    ***0***     
    8               4                    ***0***     
    8               5                    ***0***     
    8               6                          1     
    8               7                    ***0***     
    8               8                    ***0***     
    8               9                    ***0***     
    8              10                    ***0***     
    9                                                
    10                                               		fifo_sequence_item seq_item;
    11                                               
    12                                                   	function new( string name = "fifo_reset_sequence");
    13              1                          1         		super.new(name);
    14                                                   	endfunction
    15                                               
    16                                                   	task body();
    17              1                          1         		seq_item = fifo_sequence_item::type_id::create("seq_item");
    18              1                          1         		start_item(seq_item);
    19              1                          1         			seq_item.rst_n   = 0;
    20              1                          1         			seq_item.rd_en   = 0;
    21              1                          1         			seq_item.wr_en   = 0;
    22              1                          1         			seq_item.data_in = 0;
    23              1                          1         		finish_item(seq_item);


=================================================================================
=== Instance: /fifo_coverage_pkg
=== Design Unit: work.fifo_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         16        na        na        na
            Covergroup Bins         29        29         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /fifo_coverage_pkg/fifo_coverage/read_write_cg 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    29         29          -                      
    missing/total bins:                                     0         29          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wr_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1487          1          -    Covered              
        bin auto[1]                                      3534          1          -    Covered              
    Coverpoint rd_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      3497          1          -    Covered              
        bin auto[1]                                      1524          1          -    Covered              
    Coverpoint full_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin full_HIGH                                    2045          1          -    Covered              
    Coverpoint empty_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin empty_HIGH                                    164          1          -    Covered              
    Coverpoint overflow_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin overflow_HIGH                                1415          1          -    Covered              
    Coverpoint underflow_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin underflow_HIGH                                 51          1          -    Covered              
    Coverpoint wr_ack_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_ack_HIGH                                  2054          1          -    Covered              
    Coverpoint almostfull_cp                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostfull_HIGH                              1398          1          -    Covered              
    Coverpoint almostempty_cp                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostempty_HIGH                              249          1          -    Covered              
    Cross almostfull_cross                            100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],almostfull_HIGH>         747          1          -    Covered              
            bin <auto[0],auto[1],almostfull_HIGH>         186          1          -    Covered              
            bin <auto[1],auto[0],almostfull_HIGH>         184          1          -    Covered              
            bin <auto[0],auto[0],almostfull_HIGH>         281          1          -    Covered              
    Cross almostempty_cross                           100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],almostempty_HIGH>         95          1          -    Covered              
            bin <auto[0],auto[1],almostempty_HIGH>         25          1          -    Covered              
            bin <auto[1],auto[0],almostempty_HIGH>         75          1          -    Covered              
            bin <auto[0],auto[0],almostempty_HIGH>         54          1          -    Covered              
    Cross empty_cross                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[0],auto[1],empty_HIGH>               31          1          -    Covered              
            bin <auto[0],auto[0],empty_HIGH>               37          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin empty_and_wr                        0                     -    ZERO                 
    Cross full_cross                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[0],full_HIGH>              1648          1          -    Covered              
            bin <auto[0],auto[0],full_HIGH>               397          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin full_wr_rd                          0                     -    ZERO                 
    Cross overflow_cross                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],overflow_HIGH>           438          1          -    Covered              
            bin <auto[1],auto[0],overflow_HIGH>           977          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin wr_and_over                         0                     -    ZERO                 
    Cross underflow_cross                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],underflow_HIGH>           36          1          -    Covered              
            bin <auto[0],auto[1],underflow_HIGH>           15          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin underflow_and_rd                    0                     -    ZERO                 
    Cross wr_ack_cross                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],wr_ack_HIGH>             618          1          -    Covered              
            bin <auto[1],auto[0],wr_ack_HIGH>            1436          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin wr_and_wr_ack                       0                     -    ZERO                 
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /fifo_coverage_pkg --
NOTE: The modification timestamp for source file 'coverage.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File coverage.sv
    1                                                package fifo_coverage_pkg;
    2                                                import shared_pkg::*;
    3                                                import fifo_sequence_item_pkg::*;
    4                                                import uvm_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                
    7                                                class fifo_coverage extends uvm_component;
    8               1                    ***0***         `uvm_component_utils(fifo_coverage)
    8               2                    ***0***     
    8               3                    ***0***     
    9                                                    uvm_analysis_export #(fifo_sequence_item) cov_export; 
    10                                                   uvm_tlm_analysis_fifo #(fifo_sequence_item) cov_fifo;
    11                                                   fifo_sequence_item cov_seq_item;
    12                                               
    13                                                   covergroup read_write_cg;
    14                                                           wr_en_cp:          coverpoint cov_seq_item.wr_en       {option.weight         = 0;}
    15                                                           rd_en_cp:          coverpoint cov_seq_item.rd_en       {option.weight         = 0;}
    16                                                           full_cp:           coverpoint cov_seq_item.full        {bins full_HIGH        = {1}; option.weight = 0;}
    17                                                           empty_cp:          coverpoint cov_seq_item.empty       {bins empty_HIGH       = {1}; option.weight = 0;}
    18                                                           overflow_cp:       coverpoint cov_seq_item.overflow    {bins overflow_HIGH    = {1}; option.weight = 0;}
    19                                                           underflow_cp:      coverpoint cov_seq_item.underflow   {bins underflow_HIGH   = {1}; option.weight = 0;}
    20                                                           wr_ack_cp:         coverpoint cov_seq_item.wr_ack      {bins wr_ack_HIGH      = {1}; option.weight = 0;}
    21                                                           almostfull_cp:     coverpoint cov_seq_item.almostfull  {bins almostfull_HIGH  = {1}; option.weight = 0;}
    22                                                           almostempty_cp:    coverpoint cov_seq_item.almostempty {bins almostempty_HIGH = {1}; option.weight = 0;}   
    23                                               
    24                                               
    25                                               
    26                                                           almostfull_cross:   cross wr_en_cp, rd_en_cp, almostfull_cp;
    27                                                           almostempty_cross:  cross wr_en_cp, rd_en_cp, almostempty_cp;
    28                                               
    29                                               
    30                                                           // empty shouldn't be HIGH if write enable is 1 whatever read
    31                                                           empty_cross:cross wr_en_cp,rd_en_cp,empty_cp iff(cov_seq_item.rst_n)        {
    32                                                               illegal_bins empty_and_wr     =  binsof(wr_en_cp)intersect {1} && (binsof(rd_en_cp) intersect{0}  || binsof(rd_en_cp)  intersect{1}) && binsof(empty_cp) intersect{1};
    33                                                           }
    34                                                           // full shouldn't be HIGH if read enable is 1 whatever write
    35                                                           full_cross:cross wr_en_cp , rd_en_cp , full_cp       {
    36                                                               illegal_bins full_wr_rd       = (binsof(wr_en_cp)intersect {0} || binsof(wr_en_cp) intersect {1}) && binsof(rd_en_cp)  intersect{1} &&  binsof (full_cp) intersect{1};
    37                                                           }
    38                                                           // overflow shouldn't be HIGH if write enable is 0 
    39                                                           overflow_cross:cross wr_en_cp ,rd_en_cp, overflow_cp {
    40                                                               illegal_bins wr_and_over      = binsof(wr_en_cp)intersect {0} && binsof(overflow_cp)  intersect{1};
    41                                                           }
    42                                                           // underflow shouldn't be HIGH if read enable is 0 
    43                                                           underflow_cross:cross wr_en_cp,rd_en_cp,underflow_cp {
    44                                                               illegal_bins underflow_and_rd = binsof(rd_en_cp)intersect {0} && binsof(underflow_cp) intersect{1};
    45                                                           }
    46                                                           // write ack shouldn't be HIGH if write enable is 0
    47                                                            wr_ack_cross:cross wr_en_cp , rd_en_cp , wr_ack_cp  {
    48                                                               illegal_bins wr_and_wr_ack    = binsof(wr_en_cp)intersect {0} && binsof(wr_ack_cp)    intersect{1};
    49                                                           }
    50                                                       endgroup
    51                                               
    52                                                   function new(string name = "fifo_coverage", uvm_component parent = null);
    53              1                          1             super.new(name, parent);
    54              1                          1             read_write_cg = new();
    55                                                   endfunction
    56                                               
    57                                                   function void build_phase(uvm_phase phase);
    58              1                          1             super.build_phase(phase);
    59              1                          1             cov_export = new("cov_export", this);
    60              1                          1             cov_fifo = new("cov_fifo", this);
    61                                                   endfunction
    62                                               
    63                                                   function void connect_phase(uvm_phase phase);
    64              1                          1             super.connect_phase(phase);
    65              1                          1             cov_export.connect(cov_fifo.analysis_export);
    66                                                   endfunction
    67                                               
    68                                                   task run_phase(uvm_phase phase);
    69              1                          1             super.run_phase(phase);
    70              1                          1             forever begin
    71              1                       5022                 cov_fifo.get(cov_seq_item);
    72              1                       5021                 read_write_cg.sample();


=================================================================================
=== Instance: /fifo_scoreboard_pkg
=== Design Unit: work.fifo_scoreboard_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/fifo_scoreboard_pkg/fifo_scoreboard/check_data/outputs_check_assert
                     scoreboard.sv(53)                  0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        29        26         3    89.65%

================================Branch Details================================

Branch Coverage for instance /fifo_scoreboard_pkg
NOTE: The modification timestamp for source file 'scoreboard.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File scoreboard.sv
------------------------------------IF Branch------------------------------------
    46                                         1     Count coming in to IF
    46              1                          1     			super.report_phase(phase);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    67                                   ***0***     Count coming in to IF
    67              1                    ***0***     			else begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    84                                      5021     Count coming in to IF
    84              1                         96     
    89              1                       4925     				underflow_ref=0;  overflow_ref=0; 
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    90                                      4925     Count coming in to IF
    90              1                        420     				wr_ack_ref=0;
    94              1                       1436     					data_out_ref=queue.pop_front();
    98              1                       1056     					queue.push_back(F_rm.data_in);
    111             1                       2013     						data_out_ref=queue.pop_front();
Branch totals: 4 hits of 4 branches = 100.00%

------------------------------------IF Branch------------------------------------
    99                                      1056     Count coming in to IF
    99              1                        438     					wr_ack_ref=1;
    102             1                         36     					if (queue.size() == FIFO_DEPTH) begin
    105             1                        582     					end else if (queue.size() == 0) begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    117                                     5021     Count coming in to IF
    117             1                         96     			end
    117             2                       4925     			end
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    117                                     4925     Count coming in to IF
    117             3                         51     			end
    117             4                       4874     			end
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    118                                     5021     Count coming in to IF
    118             1                         96     
    118             2                       4925     
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    118                                     4925     Count coming in to IF
    118             3                       1415     
    118             4                       3510     
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    119                                     5021     Count coming in to IF
    119             1                       2045     			underflow_ref   = (!F_rm.rst_n)? 0:(empty_ref && F_rm.rd_en)? 1 : 0;
    119             2                       2976     			underflow_ref   = (!F_rm.rst_n)? 0:(empty_ref && F_rm.rd_en)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    120                                     5021     Count coming in to IF
    120             1                        164     			overflow_ref    = (!F_rm.rst_n)? 0:(full_ref  && F_rm.wr_en)? 1 : 0;
    120             2                       4857     			overflow_ref    = (!F_rm.rst_n)? 0:(full_ref  && F_rm.wr_en)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    121                                     5021     Count coming in to IF
    121             1                       1398     			full_ref        = (queue.size() == FIFO_DEPTH)? 1 : 0;
    121             2                       3623     			full_ref        = (queue.size() == FIFO_DEPTH)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    122                                     5021     Count coming in to IF
    122             1                        249     			empty_ref       = (queue.size() == 0)? 1 : 0;
    122             2                       4772     			empty_ref       = (queue.size() == 0)? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      18        18         0   100.00%

================================Condition Details================================

Condition Coverage for instance /fifo_scoreboard_pkg --
NOTE: The modification timestamp for source file 'scoreboard.sv' has been altered since compilation.

  File scoreboard.sv
----------------Focused Condition View-------------------
Line       90 Item    1  (F_rm.rd_en && ~F_rm.wr_en && (size(this.queue) != 0))
Condition totals: 3 of 3 input terms covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
               F_rm.rd_en         Y
               F_rm.wr_en         Y
  (size(this.queue) != 0)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  F_rm.rd_en_0               -                             
  Row   2:          1  F_rm.rd_en_1               (~F_rm.wr_en && (size(this.queue) != 0))
  Row   3:          1  F_rm.wr_en_0               (F_rm.rd_en && (size(this.queue) != 0))
  Row   4:          1  F_rm.wr_en_1               F_rm.rd_en                    
  Row   5:          1  (size(this.queue) != 0)_0  (F_rm.rd_en && ~F_rm.wr_en)   
  Row   6:          1  (size(this.queue) != 0)_1  (F_rm.rd_en && ~F_rm.wr_en)   

----------------Focused Condition View-------------------
Line       94 Item    1  (~F_rm.rd_en && F_rm.wr_en && (size(this.queue) != 8))
Condition totals: 3 of 3 input terms covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
               F_rm.rd_en         Y
               F_rm.wr_en         Y
  (size(this.queue) != 8)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  F_rm.rd_en_0               (F_rm.wr_en && (size(this.queue) != 8))
  Row   2:          1  F_rm.rd_en_1               -                             
  Row   3:          1  F_rm.wr_en_0               ~F_rm.rd_en                   
  Row   4:          1  F_rm.wr_en_1               (~F_rm.rd_en && (size(this.queue) != 8))
  Row   5:          1  (size(this.queue) != 8)_0  (~F_rm.rd_en && F_rm.wr_en)   
  Row   6:          1  (size(this.queue) != 8)_1  (~F_rm.rd_en && F_rm.wr_en)   

----------------Focused Condition View-------------------
Line       98 Item    1  (F_rm.rd_en & F_rm.wr_en)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  F_rm.rd_en         Y
  F_rm.wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  F_rm.rd_en_0          F_rm.wr_en                    
  Row   2:          1  F_rm.rd_en_1          F_rm.wr_en                    
  Row   3:          1  F_rm.wr_en_0          F_rm.rd_en                    
  Row   4:          1  F_rm.wr_en_1          F_rm.rd_en                    

----------------Focused Condition View-------------------
Line       99 Item    1  (size(this.queue) == 8)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (size(this.queue) == 8)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (size(this.queue) == 8)_0  -                             
  Row   2:          1  (size(this.queue) == 8)_1  -                             

----------------Focused Condition View-------------------
Line       102 Item    1  (size(this.queue) == 0)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (size(this.queue) == 0)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (size(this.queue) == 0)_0  -                             
  Row   2:          1  (size(this.queue) == 0)_1  -                             

----------------Focused Condition View-------------------
Line       117 Item    1  (this.empty_ref && F_rm.rd_en)
Condition totals: 2 of 2 input terms covered = 100.00%

      Input Term   Covered  Reason for no coverage   Hint
     -----------  --------  -----------------------  --------------
  this.empty_ref         Y
      F_rm.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.empty_ref_0      -                             
  Row   2:          1  this.empty_ref_1      F_rm.rd_en                    
  Row   3:          1  F_rm.rd_en_0          this.empty_ref                
  Row   4:          1  F_rm.rd_en_1          this.empty_ref                

----------------Focused Condition View-------------------
Line       118 Item    1  (this.full_ref && F_rm.wr_en)
Condition totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
  this.full_ref         Y
     F_rm.wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.full_ref_0       -                             
  Row   2:          1  this.full_ref_1       F_rm.wr_en                    
  Row   3:          1  F_rm.wr_en_0          this.full_ref                 
  Row   4:          1  F_rm.wr_en_1          this.full_ref                 

----------------Focused Condition View-------------------
Line       119 Item    1  (size(this.queue) == 8)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (size(this.queue) == 8)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (size(this.queue) == 8)_0  -                             
  Row   2:          1  (size(this.queue) == 8)_1  -                             

----------------Focused Condition View-------------------
Line       120 Item    1  (size(this.queue) == 0)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (size(this.queue) == 0)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (size(this.queue) == 0)_0  -                             
  Row   2:          1  (size(this.queue) == 0)_1  -                             

----------------Focused Condition View-------------------
Line       121 Item    1  (size(this.queue) == (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                     Input Term   Covered  Reason for no coverage   Hint
                    -----------  --------  -----------------------  --------------
  (size(this.queue) == (8 - 1))         Y

     Rows:       Hits  FEC Target                       Non-masking condition(s)      
 ---------  ---------  --------------------             -------------------------     
  Row   1:          1  (size(this.queue) == (8 - 1))_0  -                             
  Row   2:          1  (size(this.queue) == (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       122 Item    1  (size(this.queue) == 1)
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (size(this.queue) == 1)         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (size(this.queue) == 1)_0  -                             
  Row   2:          1  (size(this.queue) == 1)_1  -                             



Directive Coverage:
    Directives                       1         1         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/fifo_scoreboard_pkg/fifo_scoreboard/check_data/outputs_check_cover 
                                         fifo_scoreboard_pkg Verilog  SVA  scoreboard.sv(71)
                                                                              5021 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      40        37         3    92.50%

================================Statement Details================================

Statement Coverage for instance /fifo_scoreboard_pkg --
NOTE: The modification timestamp for source file 'scoreboard.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File scoreboard.sv
    1                                                package fifo_scoreboard_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                import fifo_sequence_item_pkg::*;
    5                                                import shared_pkg::*;
    6                                                
    7                                                	class fifo_scoreboard extends uvm_scoreboard;
    8               1                    ***0***     
    8               2                    ***0***     
    8               3                    ***0***     
    9                                                		`uvm_component_utils(fifo_scoreboard)
    10                                               		uvm_analysis_export #(fifo_sequence_item) sb_export;
    11                                               		uvm_tlm_analysis_fifo #(fifo_sequence_item) sb_fifo;
    12                                               		fifo_sequence_item seq_item_sb;
    13                                               
    14                                               		logic [FIFO_WIDTH-1:0] data_out_ref;
    15                                               		bit wr_ack_ref, overflow_ref;
    16                                               		bit full_ref, empty_ref, almostfull_ref, almostempty_ref, underflow_ref;
    17              1                          1     		int error_count=0, correct_count=0;
    17              2                          1     
    18                                               
    19                                               		logic [FIFO_WIDTH-1:0] queue[$];
    20                                               
    21                                               		function new(string name = "FIFO_scoreboard", uvm_component parent = null);
    22              1                          1     			super.new(name,parent);
    23                                               		endfunction
    24                                               
    25                                               		function void build_phase(uvm_phase phase);
    26              1                          1     			super.build_phase(phase);
    27              1                          1     			sb_export=new("sb_export",this);
    28              1                          1     			sb_fifo=new("sb_fifo",this);
    29                                               		endfunction
    30                                               
    31                                               		function void connect_phase(uvm_phase phase);
    32              1                          1     			super.connect_phase(phase);
    33              1                          1     			sb_export.connect(sb_fifo.analysis_export);
    34                                               		endfunction
    35                                               
    36                                               		task run_phase(uvm_phase phase);
    37              1                          1     			super.run_phase(phase);
    38              1                          1     			forever begin
    39              1                       5022     				sb_fifo.get(seq_item_sb);
    40              1                       5021     				check_data(seq_item_sb);
    41                                               			end
    42                                               		endtask
    43                                               
    44                                               
    45              1                          1     		function void report_phase(uvm_phase phase);
    46              1                          1     			super.report_phase(phase);
    47                                               			`uvm_info("report_phase", $sformatf("At time %0t: Simulation Ends and Error Count= %0d, Correct Count= %0d", $time, error_count, correct_count), UVM_MEDIUM);
    48                                               		endfunction
    49                                               
    50              1                       5021     
    51                                               		function void check_data(fifo_sequence_item F_cd);
    52                                               			reference_model(F_cd);
    53                                               			outputs_check_assert: 
    54                                               			assert(
    55                                               				data_out_ref    === F_cd.data_out    &&
    56                                               				wr_ack_ref      === F_cd.wr_ack      &&
    57                                               				overflow_ref    === F_cd.overflow    &&
    58                                               				full_ref        === F_cd.full        &&
    59                                               		     	empty_ref       === F_cd.empty       &&
    60                                               				almostfull_ref  === F_cd.almostfull  && 
    61                                               			   	almostempty_ref === F_cd.almostempty &&
    62                                               				underflow_ref   === F_cd.underflow
    63                                               			) begin
    64                                               
    65                                               				correct_count++; 
    66                                               			end
    67                                               			else begin
    68                                               				error_count++;
    69                                               				`uvm_error("run_phase", "Comparison Error");
    70                                               			end
    71                                               
    72                                               			outputs_check_cover: cover(
    73                                               				data_out_ref    === F_cd.data_out    &&
    74                                               				wr_ack_ref      === F_cd.wr_ack      &&
    75                                               				overflow_ref    === F_cd.overflow    &&
    76                                               				full_ref        === F_cd.full        &&
    77                                               		     	empty_ref       === F_cd.empty       &&
    78                                               				almostfull_ref  === F_cd.almostfull  && 
    79                                               			   	almostempty_ref === F_cd.almostempty &&
    80                                               				underflow_ref   === F_cd.underflow
    81                                               			);
    82                                               		endfunction
    83                                               
    84                                               
    85              1                         96     		function void reference_model(fifo_sequence_item F_rm);
    86              1                         96     
    86              2                         96     
    87              1                         96     			if (!F_rm.rst_n) begin
    88                                               				queue.delete();
    89                                               				underflow_ref=0;  overflow_ref=0; 
    90                                               				wr_ack_ref=0;
    91              1                        420     			end 
    92              1                        420     			else begin
    93                                               				if ( {F_rm.wr_en,F_rm.rd_en} == 2'b01 && queue.size() != 0 ) begin
    94                                               					data_out_ref=queue.pop_front();
    95              1                       1436     					wr_ack_ref=0;
    96              1                       1436     				end 
    97                                               				else if ( {F_rm.wr_en,F_rm.rd_en} == 2'b10 && queue.size() != FIFO_DEPTH ) begin
    98                                               					queue.push_back(F_rm.data_in);
    99                                               					wr_ack_ref=1;
    100             1                        438     				end
    101             1                        438     				else if ( {F_rm.wr_en,F_rm.rd_en} == 2'b11 ) begin
    102                                              					if (queue.size() == FIFO_DEPTH) begin
    103             1                         36     						data_out_ref=queue.pop_front();
    104             1                         36     						wr_ack_ref=0;
    105                                              					end else if (queue.size() == 0) begin
    106             1                        582     						queue.push_back(F_rm.data_in);
    107             1                        582     						wr_ack_ref=1;
    108             1                        582     					end else begin
    109                                              						queue.push_back(F_rm.data_in);
    110                                              						wr_ack_ref=1;
    111                                              						data_out_ref=queue.pop_front();
    112             1                       2013     					end
    113                                              				end 
    114                                              				else begin
    115                                              					 wr_ack_ref=0;
    116                                              				end
    117             1                       5021     			end
    118             1                       5021     
    119             1                       5021     			underflow_ref   = (!F_rm.rst_n)? 0:(empty_ref && F_rm.rd_en)? 1 : 0;
    120             1                       5021     			overflow_ref    = (!F_rm.rst_n)? 0:(full_ref  && F_rm.wr_en)? 1 : 0;
    121             1                       5021     			full_ref        = (queue.size() == FIFO_DEPTH)? 1 : 0;
    122             1                       5021     			empty_ref       = (queue.size() == 0)? 1 : 0;


=================================================================================
=== Instance: /fifo_monitor_pkg
=== Design Unit: work.fifo_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /fifo_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.sv
------------------------------------IF Branch------------------------------------
    43                                      5021     Count coming in to IF
    43              1                    ***0***     				`uvm_info("run_phase",rsp_seq_item.convert2string(),UVM_HIGH)
                                            5021     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      24        20         4    83.33%

================================Statement Details================================

Statement Coverage for instance /fifo_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File monitor.sv
    1                                                package fifo_monitor_pkg;
    2                                                import fifo_sequence_item_pkg::*;
    3                                                import shared_pkg::*;
    4                                                import uvm_pkg::*;	
    5                                                `include "uvm_macros.svh"
    6                                                	class fifo_monitor extends uvm_monitor;
    7               1                    ***0***     		`uvm_component_utils(fifo_monitor)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                
    9                                                		virtual FIFO_interface fifo_vif;
    10                                               		
    11                                               		fifo_sequence_item rsp_seq_item;
    12                                               		uvm_analysis_port #(fifo_sequence_item) mon_ap;
    13                                               
    14                                               		function new (string name = "fifo_monitor" , uvm_component parent = null);
    15              1                          1     			super.new(name,parent);
    16                                               		endfunction
    17                                               
    18                                               		function void build_phase(uvm_phase phase);
    19              1                          1     			super.build_phase(phase);
    20              1                          1     			mon_ap = new("mon_ap",this);
    21                                               		endfunction
    22                                               		
    23                                               		task run_phase(uvm_phase phase);
    24              1                          1     			super.run_phase(phase);
    25              1                          1     			forever begin
    26              1                       5022     				rsp_seq_item = fifo_sequence_item::type_id::create("rsp_seq_item");
    27              1                       5022     				@(negedge fifo_vif.clk);
    28                                               				
    29              1                       5021     				rsp_seq_item.data_out     = fifo_vif.data_out;
    30              1                       5021     				rsp_seq_item.wr_ack       = fifo_vif.wr_ack;
    31              1                       5021     				rsp_seq_item.overflow     = fifo_vif.overflow;
    32              1                       5021     				rsp_seq_item.full         = fifo_vif.full;
    33              1                       5021     				rsp_seq_item.empty        = fifo_vif.empty;
    34              1                       5021     				rsp_seq_item.almostfull   = fifo_vif.almostfull;
    35              1                       5021     				rsp_seq_item.almostempty  = fifo_vif.almostempty;
    36              1                       5021     				rsp_seq_item.underflow    = fifo_vif.underflow;
    37                                               
    38              1                       5021     				rsp_seq_item.rst_n        = fifo_vif.rst_n;
    39              1                       5021     				rsp_seq_item.wr_en        = fifo_vif.wr_en;
    40              1                       5021     				rsp_seq_item.rd_en        = fifo_vif.rd_en;
    41              1                       5021     				rsp_seq_item.data_in      = fifo_vif.data_in;
    42              1                       5021     				mon_ap.write(rsp_seq_item);
    43              1                    ***0***     				`uvm_info("run_phase",rsp_seq_item.convert2string(),UVM_HIGH)


=================================================================================
=== Instance: /fifo_driver_pkg
=== Design Unit: work.fifo_driver_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        11         3    78.57%

================================Statement Details================================

Statement Coverage for instance /fifo_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File driver.sv
    1                                                package fifo_driver_pkg;
    2                                                import fifo_sequence_item_pkg::*;
    3                                                import shared_pkg::*;
    4                                                import uvm_pkg::*;	
    5                                                `include "uvm_macros.svh"
    6                                                	class fifo_driver extends uvm_driver #(fifo_sequence_item);
    7               1                    ***0***     		`uvm_component_utils(fifo_driver)
    7               2                    ***0***     
    7               3                    ***0***     
    8                                                
    9                                                		virtual FIFO_interface fifo_vif;
    10                                               		
    11                                               		fifo_sequence_item stim_seq_item;
    12                                               
    13                                               		function new (string name = "fifo_driver" , uvm_component parent = null);
    14              1                          1     			super.new(name,parent);
    15                                               		endfunction
    16                                               		
    17                                               
    18                                               		task run_phase(uvm_phase phase);
    19              1                          1     			super.run_phase(phase);
    20              1                          1     			forever begin
    21              1                       5022     				stim_seq_item = fifo_sequence_item::type_id::create("stim_seq_item");
    22              1                       5022     				seq_item_port.get_next_item(stim_seq_item);
    23              1                       5021     				fifo_vif.rst_n   = stim_seq_item.rst_n;
    24              1                       5021     				fifo_vif.rd_en   = stim_seq_item.rd_en;
    25              1                       5021     				fifo_vif.wr_en   = stim_seq_item.wr_en;
    26              1                       5021     				fifo_vif.data_in = stim_seq_item.data_in;
    27              1                       5021     				@(negedge fifo_vif.clk);
    28              1                       5021     				seq_item_port.item_done();


=================================================================================
=== Instance: /fifo_config_pkg
=== Design Unit: work.fifo_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /fifo_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***     	`uvm_object_utils(fifo_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***     	`uvm_object_utils(fifo_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***     	`uvm_object_utils(fifo_config)
    5               4                    ***0***     	`uvm_object_utils(fifo_config)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***     	`uvm_object_utils(fifo_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***     	`uvm_object_utils(fifo_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /fifo_config_pkg --

  File config.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /fifo_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File config.sv
    1                                                package fifo_config_pkg;
    2                                                 import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                class fifo_config extends uvm_object;
    5               1                    ***0***     	`uvm_object_utils(fifo_config)
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                
    7                                                	virtual FIFO_interface fifo_vif;
    8                                                
    9                                                	function new(string name = "fifo_config");
    10              1                          1     		super.new(name);


=================================================================================
=== Instance: /fifo_sequencer_pkg
=== Design Unit: work.fifo_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         1         3    25.00%

================================Statement Details================================

Statement Coverage for instance /fifo_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File sequencer.sv
    1                                                package fifo_sequencer_pkg;
    2                                                import fifo_sequence_item_pkg::*;
    3                                                import uvm_pkg::*;	
    4                                                `include "uvm_macros.svh"	
    5                                                	class fifo_sequencer extends uvm_sequencer #(fifo_sequence_item);
    6               1                    ***0***     		`uvm_component_utils(fifo_sequencer);
    6               2                    ***0***     
    6               3                    ***0***     
    7                                                
    8                                                		function new(string name = "fifo_sequencer" , uvm_component parent = null);
    9               1                          1     			super.new(name , parent);


=================================================================================
=== Instance: /fifo_agent_pkg
=== Design Unit: work.fifo_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /fifo_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File agent.sv
------------------------------------IF Branch------------------------------------
    26                                         1     Count coming in to IF
    26              1                    ***0***     			if(!uvm_config_db#(fifo_config)::get(this, "", "VIF", fifo_cfg)) 
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    27                                   ***0***     Count coming in to IF
    27              1                    ***0***     				`uvm_fatal("build_phase","unable to get the configuration object");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        10         4    71.42%

================================Statement Details================================

Statement Coverage for instance /fifo_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File agent.sv
    1                                                package fifo_agent_pkg;
    2                                                import fifo_sequencer_pkg::*;
    3                                                import fifo_config_pkg::*;
    4                                                import fifo_driver_pkg::*;
    5                                                import fifo_monitor_pkg::*;
    6                                                import fifo_sequence_item_pkg::*;
    7                                                import uvm_pkg::*;
    8                                                `include "uvm_macros.svh"
    9                                                	class fifo_agent extends uvm_agent;
    10                                               
    11              1                    ***0***     		`uvm_component_utils(fifo_agent)
    11              2                    ***0***     
    11              3                    ***0***     
    12                                               
    13                                               		fifo_sequencer sqr;
    14                                               		fifo_driver drv;
    15                                               		fifo_monitor mon;
    16                                               		fifo_config fifo_cfg;
    17                                               		uvm_analysis_port #(fifo_sequence_item) agt_port;
    18                                               
    19                                               		function new(string name = "fifo_agent" , uvm_component parent = null);
    20              1                          1     			super.new(name , parent);
    21                                               		endfunction
    22                                               
    23                                               		// Inside the build_phase, build the driver
    24                                               		function void build_phase(uvm_phase phase);
    25              1                          1     			super.build_phase(phase);
    26                                               			if(!uvm_config_db#(fifo_config)::get(this, "", "VIF", fifo_cfg)) 
    27              1                    ***0***     				`uvm_fatal("build_phase","unable to get the configuration object");
    28                                               
    29              1                          1     			sqr = fifo_sequencer::type_id::create("sqr",this);
    30              1                          1     			drv = fifo_driver::type_id::create("drv",this);
    31              1                          1     			mon = fifo_monitor::type_id::create("mon",this);
    32              1                          1     			agt_port = new("agt_port", this);
    33                                               		endfunction	
    34                                               
    35                                               		function void connect_phase(uvm_phase phase);
    36              1                          1     			drv.fifo_vif = fifo_cfg.fifo_vif;
    37              1                          1     			mon.fifo_vif = fifo_cfg.fifo_vif;
    38              1                          1     			drv.seq_item_port.connect(sqr.seq_item_export);
    39              1                          1     			mon.mon_ap.connect(agt_port);


=================================================================================
=== Instance: /fifo_env_pkg
=== Design Unit: work.fifo_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      10         7         3    70.00%

================================Statement Details================================

Statement Coverage for instance /fifo_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File env.sv
    1                                                package fifo_env_pkg;
    2                                                import fifo_agent_pkg::*;
    3                                                import fifo_scoreboard_pkg::*;
    4                                                import fifo_coverage_pkg::*;
    5                                                import uvm_pkg::*;
    6                                                `include "uvm_macros.svh"
    7                                                	class fifo_env extends uvm_env;
    8                                                
    9               1                    ***0***     		`uvm_component_utils(fifo_env)
    9               2                    ***0***     
    9               3                    ***0***     
    10                                               
    11                                               		fifo_agent agt;
    12                                               		fifo_scoreboard sb;
    13                                               		fifo_coverage cov;
    14                                               
    15                                               		function new(string name = "fifo_env" , uvm_component parent = null);
    16              1                          1     			super.new(name , parent);
    17                                               		endfunction
    18                                               
    19                                               		function void build_phase(uvm_phase phase);
    20              1                          1     			super.build_phase(phase);
    21              1                          1     			agt = fifo_agent::type_id::create("agt",this);
    22              1                          1     			sb  = fifo_scoreboard::type_id::create("sb",this);
    23              1                          1     			cov = fifo_coverage::type_id::create("cov",this);
    24                                               		endfunction	
    25                                               
    26                                               		function void connect_phase(uvm_phase phase);
    27              1                          1     			agt.agt_port.connect(sb.sb_export);
    28              1                          1     			agt.agt_port.connect(cov.cov_export);


=================================================================================
=== Instance: /fifo_test_pkg
=== Design Unit: work.fifo_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        20         9        11    45.00%

================================Branch Details================================

Branch Coverage for instance /fifo_test_pkg
NOTE: The modification timestamp for source file 'test.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.sv
------------------------------------IF Branch------------------------------------
    33                                         1     Count coming in to IF
    33              1                    ***0***     		endfunction
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    34                                   ***0***     Count coming in to IF
    34              1                    ***0***     		task run_phase(uvm_phase phase);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    43                                         1     Count coming in to IF
    43              1                          1     			`uvm_info("run_phase", "write_sequence ends", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    45                                         1     Count coming in to IF
    45              1                          1     			read_sequence.start(env.agt.sqr);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    46                                         1     Count coming in to IF
    46              1                          1     			`uvm_info("run_phase", "read_sequence ends", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    48                                         1     Count coming in to IF
    48              1                          1     			read_write_sequence.start(env.agt.sqr);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    49                                         1     Count coming in to IF
    49              1                          1     			`uvm_info("run_phase", "read_write_sequence ends", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                         1     Count coming in to IF
    51              1                          1     			reset_sequence.start(env.agt.sqr);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    52                                         1     Count coming in to IF
    52              1                          1     			`uvm_info("run_phase", "Reset De-asserted", UVM_LOW);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    54                                         1     Count coming in to IF
    54              1                          1     		endtask
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      28        25         3    89.28%

================================Statement Details================================

Statement Coverage for instance /fifo_test_pkg --
NOTE: The modification timestamp for source file 'test.sv' has been altered since compilation.

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File test.sv
    1                                                package fifo_test_pkg;
    2                                                import fifo_env_pkg::*;
    3                                                import fifo_config_pkg::*;
    4                                                import fifo_reset_sequence_pkg::*;
    5                                                import fifo_read_sequence_pkg::*;
    6                                                import fifo_write_sequence_pkg::*;
    7                                                import fifo_read_write_sequence_pkg::*;
    8                                                import uvm_pkg::*;
    9                                                `include "uvm_macros.svh"
    10                                               	class fifo_test extends uvm_test;
    11                                               		`uvm_component_utils(fifo_test)
    12              1                    ***0***     		fifo_env env;
    12              2                    ***0***     
    12              3                          1     
    13                                               		fifo_reset_sequence reset_sequence;
    14                                               		fifo_write_sequence write_sequence;
    15                                               		fifo_read_sequence read_sequence;
    16                                               		fifo_read_write_sequence read_write_sequence;
    17                                               		fifo_config fifo_cfg;
    18                                               		function new(string name = "fifo_test", uvm_component parent = null);
    19                                               			super.new(name,parent);
    20                                               		endfunction
    21                                               		function void build_phase(uvm_phase phase);
    22              1                          1     			super.build_phase(phase);
    23                                               			env                 =fifo_env::type_id::create("env",this);
    24                                               			reset_sequence      =fifo_reset_sequence::type_id::create("reset_sequence");
    25                                               			write_sequence      =fifo_write_sequence::type_id::create("write_sequence");
    26              1                          1     			read_sequence       =fifo_read_sequence::type_id::create("read_sequence");
    27              1                          1     			read_write_sequence =fifo_read_write_sequence::type_id::create("read_write_sequence");
    28              1                          1     			fifo_cfg            =fifo_config::type_id::create("fifo_cfg");
    29              1                          1     			if (!uvm_config_db#(virtual FIFO_interface)::get(this, "", "FIFO_IF", fifo_cfg.fifo_vif)) begin
    30              1                          1     				`uvm_fatal("build_phase", "TEST - unable to get the IF");
    31              1                          1     			end
    32              1                          1     			uvm_config_db#(fifo_config)::set(this, "*", "VIF", fifo_cfg);
    33                                               		endfunction
    34              1                    ***0***     		task run_phase(uvm_phase phase);
    35                                               			super.run_phase(phase);
    36              1                          1     			phase.raise_objection(this);
    37                                               			// start the sequences
    38                                               			`uvm_info("run_phase", "Reset Asserted", UVM_LOW);
    39                                               			reset_sequence.start(env.agt.sqr);
    40              1                          1     			`uvm_info("run_phase", "Reset De-asserted", UVM_LOW);
    41              1                          1     			`uvm_info("run_phase", "write_sequence starts", UVM_LOW);
    42                                               			write_sequence.start(env.agt.sqr);
    43              1                          1     			`uvm_info("run_phase", "write_sequence ends", UVM_LOW);
    44              1                          1     			`uvm_info("run_phase", "read_sequence starts", UVM_LOW);
    45              1                          1     			read_sequence.start(env.agt.sqr);
    46              1                          1     			`uvm_info("run_phase", "read_sequence ends", UVM_LOW);
    47              1                          1     			`uvm_info("run_phase", "read_write_sequence starts", UVM_LOW);
    48              1                          1     			read_write_sequence.start(env.agt.sqr);
    49              1                          1     			`uvm_info("run_phase", "read_write_sequence ends", UVM_LOW);
    50              1                          1     			`uvm_info("run_phase", "Reset Asserted", UVM_LOW);
    51              1                          1     			reset_sequence.start(env.agt.sqr);
    52              1                          1     			`uvm_info("run_phase", "Reset De-asserted", UVM_LOW);
    53              1                          1     			phase.drop_objection(this);
    54              1                          1     		endtask
    55              1                          1     	endclass


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /fifo_coverage_pkg/fifo_coverage/read_write_cg 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    29         29          -                      
    missing/total bins:                                     0         29          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wr_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      1487          1          -    Covered              
        bin auto[1]                                      3534          1          -    Covered              
    Coverpoint rd_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                      3497          1          -    Covered              
        bin auto[1]                                      1524          1          -    Covered              
    Coverpoint full_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin full_HIGH                                    2045          1          -    Covered              
    Coverpoint empty_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin empty_HIGH                                    164          1          -    Covered              
    Coverpoint overflow_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin overflow_HIGH                                1415          1          -    Covered              
    Coverpoint underflow_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin underflow_HIGH                                 51          1          -    Covered              
    Coverpoint wr_ack_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin wr_ack_HIGH                                  2054          1          -    Covered              
    Coverpoint almostfull_cp                          100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostfull_HIGH                              1398          1          -    Covered              
    Coverpoint almostempty_cp                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        bin almostempty_HIGH                              249          1          -    Covered              
    Cross almostfull_cross                            100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],almostfull_HIGH>         747          1          -    Covered              
            bin <auto[0],auto[1],almostfull_HIGH>         186          1          -    Covered              
            bin <auto[1],auto[0],almostfull_HIGH>         184          1          -    Covered              
            bin <auto[0],auto[0],almostfull_HIGH>         281          1          -    Covered              
    Cross almostempty_cross                           100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],almostempty_HIGH>         95          1          -    Covered              
            bin <auto[0],auto[1],almostempty_HIGH>         25          1          -    Covered              
            bin <auto[1],auto[0],almostempty_HIGH>         75          1          -    Covered              
            bin <auto[0],auto[0],almostempty_HIGH>         54          1          -    Covered              
    Cross empty_cross                                 100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[0],auto[1],empty_HIGH>               31          1          -    Covered              
            bin <auto[0],auto[0],empty_HIGH>               37          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin empty_and_wr                        0                     -    ZERO                 
    Cross full_cross                                  100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[0],full_HIGH>              1648          1          -    Covered              
            bin <auto[0],auto[0],full_HIGH>               397          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin full_wr_rd                          0                     -    ZERO                 
    Cross overflow_cross                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],overflow_HIGH>           438          1          -    Covered              
            bin <auto[1],auto[0],overflow_HIGH>           977          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin wr_and_over                         0                     -    ZERO                 
    Cross underflow_cross                             100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],underflow_HIGH>           36          1          -    Covered              
            bin <auto[0],auto[1],underflow_HIGH>           15          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin underflow_and_rd                    0                     -    ZERO                 
    Cross wr_ack_cross                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],wr_ack_HIGH>             618          1          -    Covered              
            bin <auto[1],auto[0],wr_ack_HIGH>            1436          1          -    Covered              
        Illegal and Ignore Bins:
            illegal_bin wr_and_wr_ack                       0                     -    ZERO                 

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/top/DUT/SVA/overflow_cover_1            assertions Verilog  SVA  assertions.sv(15)
                                                                              1382 Covered   
/top/DUT/SVA/underflow_cover_1           assertions Verilog  SVA  assertions.sv(16)
                                                                                51 Covered   
/top/DUT/SVA/wr_ack_cover_1              assertions Verilog  SVA  assertions.sv(17)
                                                                              2014 Covered   
/top/DUT/SVA/overflow_cover_2            assertions Verilog  SVA  assertions.sv(22)
                                                                              2014 Covered   
/top/DUT/SVA/underflow_cover_2           assertions Verilog  SVA  assertions.sv(23)
                                                                              1412 Covered   
/top/DUT/SVA/wr_ack_cover_2              assertions Verilog  SVA  assertions.sv(24)
                                                                              1382 Covered   
/top/DUT/SVA/full_cover_1                assertions Verilog  SVA  assertions.sv(32)
                                                                              1998 Covered   
/top/DUT/SVA/empty_cover_1               assertions Verilog  SVA  assertions.sv(33)
                                                                               259 Covered   
/top/DUT/SVA/almostfull_cover_1          assertions Verilog  SVA  assertions.sv(34)
                                                                              1373 Covered   
/top/DUT/SVA/almostempty_cover_1         assertions Verilog  SVA  assertions.sv(35)
                                                                               244 Covered   
/top/DUT/SVA/full_cover_2                assertions Verilog  SVA  assertions.sv(41)
                                                                              3023 Covered   
/top/DUT/SVA/empty_cover_2               assertions Verilog  SVA  assertions.sv(42)
                                                                              4762 Covered   
/top/DUT/SVA/almostfull_cover_2          assertions Verilog  SVA  assertions.sv(43)
                                                                              3648 Covered   
/top/DUT/SVA/almostempty_cover_2         assertions Verilog  SVA  assertions.sv(44)
                                                                              4777 Covered   
/top/DUT/SVA/rd_count_cover              assertions Verilog  SVA  assertions.sv(52)
                                                                               412 Covered   
/top/DUT/SVA/wr_count_cover              assertions Verilog  SVA  assertions.sv(53)
                                                                              1411 Covered   
/top/DUT/SVA/rd_wr_count_cover           assertions Verilog  SVA  assertions.sv(54)
                                                                               567 Covered   
/top/DUT/SVA/rd_ptr_cover                assertions Verilog  SVA  assertions.sv(61)
                                                                              1412 Covered   
/top/DUT/SVA/wr_ptr_cover                assertions Verilog  SVA  assertions.sv(62)
                                                                              2014 Covered   
/top/DUT/SVA/almostfull_full_cover       assertions Verilog  SVA  assertions.sv(74)
                                                                               657 Covered   
/top/DUT/SVA/almostempty_empty_cover     assertions Verilog  SVA  assertions.sv(75)
                                                                                16 Covered   
/top/DUT/SVA/rst_count_cover             assertions Verilog  SVA  assertions.sv(91)
                                                                                95 Covered   
/top/DUT/SVA/rst_rd_ptr_cover            assertions Verilog  SVA  assertions.sv(92)
                                                                                95 Covered   
/top/DUT/SVA/rst_wr_ptr_cover            assertions Verilog  SVA  assertions.sv(93)
                                                                                95 Covered   
/top/DUT/SVA/rst_full_cover              assertions Verilog  SVA  assertions.sv(94)
                                                                                95 Covered   
/top/DUT/SVA/rst_empty_cover             assertions Verilog  SVA  assertions.sv(95)
                                                                                95 Covered   
/top/DUT/SVA/rst_almostfull_cover        assertions Verilog  SVA  assertions.sv(96)
                                                                                95 Covered   
/top/DUT/SVA/rst_almostempty_cover       assertions Verilog  SVA  assertions.sv(97)
                                                                                95 Covered   
/top/DUT/SVA/rst_overflow_cover          assertions Verilog  SVA  assertions.sv(99)
                                                                                95 Covered   
/top/DUT/SVA/rst_underflow_cover         assertions Verilog  SVA  assertions.sv(100)
                                                                                95 Covered   
/top/DUT/SVA/rst_wr_ack_cover            assertions Verilog  SVA  assertions.sv(101)
                                                                                95 Covered   
/fifo_scoreboard_pkg/fifo_scoreboard/check_data/outputs_check_cover 
                                         fifo_scoreboard_pkg Verilog  SVA  scoreboard.sv(71)
                                                                              5021 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 32

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/top/DUT/SVA/overflow_assert_1
                     assertions.sv(12)                  0          1
/top/DUT/SVA/underflow_assert_1
                     assertions.sv(13)                  0          1
/top/DUT/SVA/wr_ack_assert_1
                     assertions.sv(14)                  0          1
/top/DUT/SVA/overflow_assert_2
                     assertions.sv(19)                  0          1
/top/DUT/SVA/underflow_assert_2
                     assertions.sv(20)                  0          1
/top/DUT/SVA/wr_ack_assert_2
                     assertions.sv(21)                  0          1
/top/DUT/SVA/full_assert_1
                     assertions.sv(28)                  0          1
/top/DUT/SVA/empty_assert_1
                     assertions.sv(29)                  0          1
/top/DUT/SVA/almostfull_assert_1
                     assertions.sv(30)                  0          1
/top/DUT/SVA/almostempty_assert_1
                     assertions.sv(31)                  0          1
/top/DUT/SVA/full_assert_2
                     assertions.sv(37)                  0          1
/top/DUT/SVA/empty_assert_2
                     assertions.sv(38)                  0          1
/top/DUT/SVA/almostfull_assert_2
                     assertions.sv(39)                  0          1
/top/DUT/SVA/almostempty_assert_2
                     assertions.sv(40)                  0          1
/top/DUT/SVA/rd_count_assert
                     assertions.sv(49)                  0          1
/top/DUT/SVA/wr_count_assert
                     assertions.sv(50)                  0          1
/top/DUT/SVA/rd_wr_count_assert
                     assertions.sv(51)                  0          1
/top/DUT/SVA/rd_ptr_assert
                     assertions.sv(59)                  0          1
/top/DUT/SVA/wr_ptr_assert
                     assertions.sv(60)                  0          1
/top/DUT/SVA/almostfull_full_assert
                     assertions.sv(69)                  0          1
/top/DUT/SVA/almostempty_empty_assert
                     assertions.sv(72)                  0          1
/top/DUT/SVA/rst_count_assert
                     assertions.sv(80)                  0          1
/top/DUT/SVA/rst_rd_ptr_assert
                     assertions.sv(81)                  0          1
/top/DUT/SVA/rst_wr_ptr_assert
                     assertions.sv(82)                  0          1
/top/DUT/SVA/rst_full_assert
                     assertions.sv(83)                  0          1
/top/DUT/SVA/rst_empty_assert
                     assertions.sv(84)                  0          1
/top/DUT/SVA/rst_almostfull_assert
                     assertions.sv(85)                  0          1
/top/DUT/SVA/rst_almostempty_assert
                     assertions.sv(86)                  0          1
/top/DUT/SVA/rst_overflow_assert
                     assertions.sv(88)                  0          1
/top/DUT/SVA/rst_underflow_assert
                     assertions.sv(89)                  0          1
/top/DUT/SVA/rst_wr_ack_assert
                     assertions.sv(90)                  0          1
/fifo_read_write_sequence_pkg/fifo_read_write_sequence/body/#ublk#25337815#16/immed__19
                     read_write_sequence.sv(19)
                                                        0          1
/fifo_write_sequence_pkg/fifo_write_sequence/body/#ublk#75765463#16/immed__19
                     write_sequence.sv(19)              0          1
/fifo_read_sequence_pkg/fifo_read_sequence/body/#ublk#124360423#16/immed__19
                     read_sequence.sv(19)               0          1
/fifo_scoreboard_pkg/fifo_scoreboard/check_data/outputs_check_assert
                     scoreboard.sv(53)                  0          1

Total Coverage By Instance (filtered view): 83.91%

